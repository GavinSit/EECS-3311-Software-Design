INCLUDE_PATH =  -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\library\wel\spec\windows\include" -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\library\time\spec\include" -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\library\vision2\spec\include" -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\C_library\zlib"
SHELL = /bin/sh
CC = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/gcc"
CPP = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/gcc"
CFLAGS = -O2 -pipe -imacros eif_config.mingw.h -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_UNICODE -DUNICODE -DWIN32_LEAN_AND_MEAN  -DEIF_THREADS  -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/spec/win64/include" -I. $(INCLUDE_PATH)
CPPFLAGS = -O2 -pipe -imacros eif_config.mingw.h -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_UNICODE -DUNICODE -DWIN32_LEAN_AND_MEAN  -DEIF_THREADS  -I"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/spec/win64/include" -I. $(INCLUDE_PATH)
LDFLAGS = 
CCLDFLAGS =   -mwindows
LDSHAREDFLAGS =  
EIFLIB = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/spec/win64/lib/mingw/mtfinalized.a"
EIFTEMPLATES = C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/config/win64/templates
LIBS = 
MAKE = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/make.exe"
AR = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/ar"
LD = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/ld"
MKDEP =   --
MV = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/cp"
CP = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/cp"
RANLIB = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/ranlib.exe"
RM = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/rm" -f
FILE_EXIST = 
RMDIR = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/rd"
X2C = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/spec/win64/bin/x2c.exe"
SHAREDLINK = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/dllwrap"
SHAREDLIBS = -luser32 -lws2_32 -ladvapi32 -lgdi32 -lshell32 -lmsimg32 -lcomdlg32 -luuid -lole32 -loleaut32 -lcomctl32 -lmpr -lshlwapi -lwinspool -lstdc++ 
SHARED_SUFFIX = .dll
COMMAND_MAKEFILE = 
START_TEST = if [ ! -f finished ] ; then 
END_TEST = ; fi 
CREATE_TEST = "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/msys/1.0/bin/touch" finished
PATH := C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/libexec/gcc/mingw32/3.4.2;C:\Python33\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\TDM-GCC-64\bin;C:\Users\Gavin Sit\AppData\Local\Microsoft\WindowsApps;C:\php-7.4.1-Win32-vc15-x64; 
SYSTEM_IN_DYNAMIC_LIB = simodyssey1.dll 
.SUFFIXES: .x .xpp .cpp .o 

.c.o:
	$(CC) $(CFLAGS) -c $<

.cpp.o:
	$(CPP) $(CPPFLAGS) -c $<

.x.o:
	$(X2C) $< $*.c
	$(CC) $(CFLAGS) -c $*.c
	$(RM) $*.c

.xpp.o:
	$(X2C) $< $*.cpp
	$(CPP) $(CPPFLAGS) -c $*.cpp
	$(RM) $*.cpp

.x.c:
	$(X2C) $< $*.c

.xpp.cpp:
	$(X2C) $< $*.cpp

SUBDIRS = C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20 C21 C22 C23 C24 C25 C26 C27 C28 C29 C30 C31 C32 C33 C34 C35 C36 C37 C38 C39 C40 C41 C42 E1 E2 E3

EXTERNALS =  \
	"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\library\wel\spec\mingw\win64\lib\mtwel.lib" \
	"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\library\vision2\spec\mingw\win64\lib\mtvision2.lib" \
	"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\C_library\libpng\spec\mingw\win64\lib\libpng.lib" \
	"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL\C_library\zlib\spec\mingw\win64\lib\zlib.lib"

all:: simodyssey1.exe
	echo done > completed.eif

C1/Cobj1.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C1 && $(START_TEST) $(MAKE) Cobj1.o $(END_TEST) && cd ..

C2/Cobj2.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C2 && $(START_TEST) $(MAKE) Cobj2.o $(END_TEST) && cd ..

C3/Cobj3.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C3 && $(START_TEST) $(MAKE) Cobj3.o $(END_TEST) && cd ..

C4/Cobj4.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C4 && $(START_TEST) $(MAKE) Cobj4.o $(END_TEST) && cd ..

C5/Cobj5.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C5 && $(START_TEST) $(MAKE) Cobj5.o $(END_TEST) && cd ..

C6/Cobj6.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C6 && $(START_TEST) $(MAKE) Cobj6.o $(END_TEST) && cd ..

C7/Cobj7.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C7 && $(START_TEST) $(MAKE) Cobj7.o $(END_TEST) && cd ..

C8/Cobj8.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C8 && $(START_TEST) $(MAKE) Cobj8.o $(END_TEST) && cd ..

C9/Cobj9.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C9 && $(START_TEST) $(MAKE) Cobj9.o $(END_TEST) && cd ..

C10/Cobj10.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C10 && $(START_TEST) $(MAKE) Cobj10.o $(END_TEST) && cd ..

C11/Cobj11.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C11 && $(START_TEST) $(MAKE) Cobj11.o $(END_TEST) && cd ..

C12/Cobj12.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C12 && $(START_TEST) $(MAKE) Cobj12.o $(END_TEST) && cd ..

C13/Cobj13.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C13 && $(START_TEST) $(MAKE) Cobj13.o $(END_TEST) && cd ..

C14/Cobj14.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C14 && $(START_TEST) $(MAKE) Cobj14.o $(END_TEST) && cd ..

C15/Cobj15.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C15 && $(START_TEST) $(MAKE) Cobj15.o $(END_TEST) && cd ..

C16/Cobj16.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C16 && $(START_TEST) $(MAKE) Cobj16.o $(END_TEST) && cd ..

C17/Cobj17.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C17 && $(START_TEST) $(MAKE) Cobj17.o $(END_TEST) && cd ..

C18/Cobj18.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C18 && $(START_TEST) $(MAKE) Cobj18.o $(END_TEST) && cd ..

C19/Cobj19.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C19 && $(START_TEST) $(MAKE) Cobj19.o $(END_TEST) && cd ..

C20/Cobj20.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C20 && $(START_TEST) $(MAKE) Cobj20.o $(END_TEST) && cd ..

C21/Cobj21.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C21 && $(START_TEST) $(MAKE) Cobj21.o $(END_TEST) && cd ..

C22/Cobj22.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C22 && $(START_TEST) $(MAKE) Cobj22.o $(END_TEST) && cd ..

C23/Cobj23.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C23 && $(START_TEST) $(MAKE) Cobj23.o $(END_TEST) && cd ..

C24/Cobj24.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C24 && $(START_TEST) $(MAKE) Cobj24.o $(END_TEST) && cd ..

C25/Cobj25.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C25 && $(START_TEST) $(MAKE) Cobj25.o $(END_TEST) && cd ..

C26/Cobj26.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C26 && $(START_TEST) $(MAKE) Cobj26.o $(END_TEST) && cd ..

C27/Cobj27.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C27 && $(START_TEST) $(MAKE) Cobj27.o $(END_TEST) && cd ..

C28/Cobj28.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C28 && $(START_TEST) $(MAKE) Cobj28.o $(END_TEST) && cd ..

C29/Cobj29.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C29 && $(START_TEST) $(MAKE) Cobj29.o $(END_TEST) && cd ..

C30/Cobj30.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C30 && $(START_TEST) $(MAKE) Cobj30.o $(END_TEST) && cd ..

C31/Cobj31.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C31 && $(START_TEST) $(MAKE) Cobj31.o $(END_TEST) && cd ..

C32/Cobj32.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C32 && $(START_TEST) $(MAKE) Cobj32.o $(END_TEST) && cd ..

C33/Cobj33.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C33 && $(START_TEST) $(MAKE) Cobj33.o $(END_TEST) && cd ..

C34/Cobj34.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C34 && $(START_TEST) $(MAKE) Cobj34.o $(END_TEST) && cd ..

C35/Cobj35.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C35 && $(START_TEST) $(MAKE) Cobj35.o $(END_TEST) && cd ..

C36/Cobj36.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C36 && $(START_TEST) $(MAKE) Cobj36.o $(END_TEST) && cd ..

C37/Cobj37.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C37 && $(START_TEST) $(MAKE) Cobj37.o $(END_TEST) && cd ..

C38/Cobj38.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C38 && $(START_TEST) $(MAKE) Cobj38.o $(END_TEST) && cd ..

C39/Cobj39.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C39 && $(START_TEST) $(MAKE) Cobj39.o $(END_TEST) && cd ..

C40/Cobj40.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C40 && $(START_TEST) $(MAKE) Cobj40.o $(END_TEST) && cd ..

C41/Cobj41.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C41 && $(START_TEST) $(MAKE) Cobj41.o $(END_TEST) && cd ..

C42/Cobj42.o: Makefile E1/estructure.h E1/eoffsets.h
	cd C42 && $(START_TEST) $(MAKE) Cobj42.o $(END_TEST) && cd ..

E1/emain.o:  Makefile E1/Makefile
	$(CP) "$(EIFTEMPLATES)/emain.template" "E1/emain.c"
	cd E1 && $(START_TEST) $(MAKE) emain.o  $(END_TEST) && cd ..

E1/estructure.h: E1/estructure.x
	$(X2C) E1/estructure.x E1/estructure.h

E1/eoffsets.h: E1/eoffsets.x
	$(X2C) E1/eoffsets.x E1/eoffsets.h

E1/epattern.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) epattern.o  $(END_TEST) && cd ..

E1/eref.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) eref.o  $(END_TEST) && cd ..

E1/epoly.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) epoly.o  $(END_TEST) && cd ..

E1/esize.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) esize.o  $(END_TEST) && cd ..

E1/eplug.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) eplug.o  $(END_TEST) && cd ..

E1/eskelet.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) eskelet.o  $(END_TEST) && cd ..

E1/enames.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) enames.o  $(END_TEST) && cd ..

E1/evisib.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) evisib.o  $(END_TEST) && cd ..

E1/ececil.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) ececil.o  $(END_TEST) && cd ..

E1/einit.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) einit.o  $(END_TEST) && cd ..

E1/eparents.o : Makefile E1/Makefile E1/estructure.h E1/eoffsets.h
	cd E1 && $(START_TEST) $(MAKE) eparents.o  $(END_TEST) && cd ..

E2/Eobj2.o: Makefile E1/estructure.h E1/eoffsets.h
	cd E2 && $(START_TEST) $(MAKE) Eobj2.o $(END_TEST) && cd ..

E3/Eobj3.o: Makefile E1/estructure.h E1/eoffsets.h
	cd E3 && $(START_TEST) $(MAKE) Eobj3.o $(END_TEST) && cd ..

OBJECTS = E3/Eobj3.o E2/Eobj2.o E1/eparents.o  E1/einit.o  E1/ececil.o  E1/evisib.o  E1/enames.o  E1/eskelet.o  E1/eplug.o  E1/esize.o  E1/epoly.o  E1/eref.o  E1/epattern.o  C42/Cobj42.o C41/Cobj41.o C40/Cobj40.o C39/Cobj39.o C38/Cobj38.o C37/Cobj37.o C36/Cobj36.o C35/Cobj35.o C34/Cobj34.o C33/Cobj33.o C32/Cobj32.o C31/Cobj31.o C30/Cobj30.o C29/Cobj29.o C28/Cobj28.o C27/Cobj27.o C26/Cobj26.o C25/Cobj25.o C24/Cobj24.o C23/Cobj23.o C22/Cobj22.o C21/Cobj21.o C20/Cobj20.o C19/Cobj19.o C18/Cobj18.o C17/Cobj17.o C16/Cobj16.o C15/Cobj15.o C14/Cobj14.o C13/Cobj13.o C12/Cobj12.o C11/Cobj11.o C10/Cobj10.o C9/Cobj9.o C8/Cobj8.o C7/Cobj7.o C6/Cobj6.o C5/Cobj5.o C4/Cobj4.o C3/Cobj3.o C2/Cobj2.o C1/Cobj1.o 

C_OBJECTS = C42/Cobj42.o C41/Cobj41.o C40/Cobj40.o C39/Cobj39.o C38/Cobj38.o C37/Cobj37.o C36/Cobj36.o C35/Cobj35.o C34/Cobj34.o C33/Cobj33.o C32/Cobj32.o C31/Cobj31.o C30/Cobj30.o C29/Cobj29.o C28/Cobj28.o C27/Cobj27.o C26/Cobj26.o C25/Cobj25.o C24/Cobj24.o C23/Cobj23.o C22/Cobj22.o C21/Cobj21.o C20/Cobj20.o C19/Cobj19.o C18/Cobj18.o C17/Cobj17.o C16/Cobj16.o C15/Cobj15.o C14/Cobj14.o C13/Cobj13.o C12/Cobj12.o C11/Cobj11.o C10/Cobj10.o C9/Cobj9.o C8/Cobj8.o C7/Cobj7.o C6/Cobj6.o C5/Cobj5.o C4/Cobj4.o C3/Cobj3.o C2/Cobj2.o C1/Cobj1.o 

EOBJECTS = E3/Eobj3.o E2/Eobj2.o E1/eparents.o  E1/einit.o  E1/ececil.o  E1/evisib.o  E1/enames.o  E1/eskelet.o  E1/eplug.o  E1/esize.o  E1/epoly.o  E1/eref.o  E1/epattern.o  




simodyssey1.exe: E1/emain.o $(OBJECTS) simodyssey1.res 
	$(COMMAND_MAKEFILE)
	$(RM) $@
	$(CC) $(LDFLAGS) $(CCLDFLAGS) -o simodyssey1.exe E1/emain.o $(PRECOMP_OBJECTS) simodyssey1.res $(OBJECTS) $(EXTERNALS) $(EIFLIB) -luser32 -lws2_32 -ladvapi32 -lgdi32 -lshell32 -lmsimg32 -lcomdlg32 -luuid -lole32 -loleaut32 -lcomctl32 -lmpr -lshlwapi -lwinspool -lstdc++ $(ISE_SHAREDLIBS)

../../../simodyssey1.rc:
	if [ ! -f ../../../simodyssey1.rc ] ; then $(MV) "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/config/win64/mingw/eiffel.rc" ../../../simodyssey1.rc ; fi 

simodyssey1.res: ../../../simodyssey1.rc Makefile
	"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/windres" --preprocessor='"C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/cpp.exe"' -I../../.. ../../../simodyssey1.rc -O coff -o simodyssey1.res

RCECIL = MTargv.o MTboolstr.o MTcecil.o MTcompress.o MTconsole.o MTcopy.o \
	MTdir.o MTeif_project.o MTeif_threads.o MTeif_type_id.o MTequal.o \
	MTerror.o MTeveqs.o MTexcept.o MTfile.o MTgarcol.o MTgen_conf.o \
	MThash.o MThashin.o MThector.o MTidrs.o MTinternal.o MTlmalloc.o \
	MTlocal.o MTmain.o MTmalloc.o MTmemory.o MTmemory_analyzer.o MTmisc.o \
	MTnotify_token.o MTobject_id.o MToffset.o MToption.o MTout.o \
	MTpath_name.o MTplug.o MTposix_threads.o MTprivate_queue.o \
	MTprocessor.o MTprocessor_registry.o MTqueue_cache.o MTreq_grp.o \
	MTretrieve.o MTrout_obj.o MTrun_idr.o MTscoop.o MTscoop_gc.o \
	MTsearch.o MTsig.o MTstore.o MTtimer.o MTtools.o MTtraverse.o \
	MTumain.o MTurgent.o 


#STATIC_CECIL PART
STATIC_CECIL = libsimodyssey1.o
cecil: $(STATIC_CECIL)
$(STATIC_CECIL): $(OBJECTS)
	$(AR) x $(EIFLIB)
	$(AR) rc $(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(PRECOMP_OBJECTS) $(RCECIL)
	$(RANLIB) $(STATIC_CECIL)
	$(RM) $(RCECIL)



#SHARED_CECIL PART
SHARED_CECIL = libsimodyssey1$(SHARED_SUFFIX)
dynamic_cecil: $(SHARED_CECIL) 
DEF_FILE= c_simodyssey1.def 
c_simodyssey1.def: 
	$(RM) $@
	@echo LIBRARY libsimodyssey1.dll > $@
	@type "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/studio/config/win64/templates/cecil.def" >> $@

SHARED_CECIL_OBJECT = $(OBJECTS) \
		E1/emain.o
SHAREDFLAGS = $(LDSHAREDFLAGS) \
\
	--dlltool-name "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/dlltool" \
	--as "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/as" \
	--def $(DEF_FILE) --output-lib c_dll_simodyssey1.lib -o $(SHARED_CECIL)

$(SHARED_CECIL): $(SHARED_CECIL_OBJECT)  $(DEF_FILE)
	if [ -f $(SHARED_CECIL) ] ; then $(RM) $(SHARED_CECIL) ; fi
	$(SHAREDLINK) $(SHAREDFLAGS) $(SHARED_CECIL_OBJECT) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 

#SYSTEM_IN_DYNAMIC_LIB PART

DEF_FILE= simodyssey1.def
dynlib: $(SYSTEM_IN_DYNAMIC_LIB) 
E1/egc_dynlib.o: Makefile E1/Makefile
	$(CP) "$(EIFTEMPLATES)/egc_dynlib.template" E1/egc_dynlib.c
	cd E1 && $(MAKE) egc_dynlib.o && cd ..
E1/edynlib.o: Makefile E1/Makefile E1/edynlib.c 
	cd E1 && $(MAKE) edynlib.o && cd ..

SYSTEM_IN_DYNAMIC_LIB_OBJ = $(OBJECTS) \
		E1/edynlib.o E1/egc_dynlib.o 
DYNLIBSHAREDFLAGS = $(LDSHAREDFLAGS) \
\
	--dlltool-name "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/dlltool" \
	--as "C:\Program Files\Eiffel Software\EiffelStudio 19.05 GPL/gcc/win64/mingw/bin/as" \
	--def $(DEF_FILE) --output-lib dll_simodyssey1.lib -o $(SYSTEM_IN_DYNAMIC_LIB)

$(SYSTEM_IN_DYNAMIC_LIB): $(SYSTEM_IN_DYNAMIC_LIB_OBJ)  $(DEF_FILE)
	if [ -f $(SYSTEM_IN_DYNAMIC_LIB) ] ; then $(RM) $(SYSTEM_IN_DYNAMIC_LIB) ; fi
	$(SHAREDLINK) $(DYNLIBSHAREDFLAGS) $(SYSTEM_IN_DYNAMIC_LIB_OBJ) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 



clean: sub_clean local_clean
clobber: sub_clobber local_clobber

local_clean::
	$(RM) core finished *.o *.so *.a

local_clobber:: local_clean
	$(RM) Makefile config.sh finish_freezing

sub_clean::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i/Makefile ]; then \
			(cd $$i ; $(MAKE) clean); \
		fi; \
	done

sub_clobber::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i/Makefile ]; then \
			(cd $$i ; $(MAKE) clobber); \
		fi; \
	done

